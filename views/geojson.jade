extends layout

block content
  h1= title
  p javascript end to end
  
  div#mapContainer
  script
    var map;
    var cadastralLayer;
    
    $(document).ready(function () {
      map = L.map('mapContainer').setView([45.676381, -111.0807], 13);
      L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
      }).addTo(map);
      map.on('load', function(e) {
        requestUpdatedCadastre(e.target.getBounds());
      });
      map.on('moveend', function(e) {
        requestUpdatedCadastre(e.target.getBounds());
      });
    });
    function onEachFeature(feature, layer) {
      var popupContent = "<p>I started out as a GeoJSON " +
          feature.geometry.type + ", but now I'm a Leaflet vector!</p>";

      if (feature.properties && feature.properties.popupContent) {
        popupContent += feature.properties.popupContent;
      }

      layer.bindPopup(popupContent);
    }

    function requestUpdatedCadastre(bounds) {
      $.ajax(
        {
          type: 'POST',
          url: '/RetrieveCadastre',
          dataType: 'json',
          data: JSON.stringify(bounds),
          contentType: 'application/json; charset=utf-8',
          success: function (result) {
            parseResponseCadastre(result)
          },
          error: function (req, status, error) {
            alert('Unable to get cadastral data');
          }
        });
    }
         
    function parseResponseCadastre(data) {
      //if (cadastralLayer != undefined)
      //{
      //  map.removeLayer(cadastralLayer);
      //}
      //cadastralLayer = new L.GeoJSON();
      //cadastralLayer.on('featureparse', function(e) {
      //  e.layer.setStyle({ color:  '#003300', weight: 2, fill: true, fillColor: '#009933' });
      //});      
      //cadastralLayer.addGeoJSON(data);
      //map.addLayer(cadastralLayer);
      cadastralLayer = new L.geoJson(data, {
        style: function (feature) {
          return feature.properties && feature.properties.style;
        },

        onEachFeature: onEachFeature,

        pointToLayer: function (feature, latlng) {
          return L.circleMarker(latlng, {
            radius: 8,
            fillColor: "#ff7800",
            color: "#000",
            weight: 1,
            opacity: 1,
            fillOpacity: 0.8
          });
        } 
      }).addTo(map);

    }    